/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };
    };

    behaviors {
        ss_hs_modmorph: ss_hs_modmorph {
            compatible = "zmk,behavior-mod-morph";
            label = "SS_HS_MODMORPH";
            bindings = <&kp M>, <&kp RIGHT_BRACKET>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        kh_hs_tapdance: kh_hs_tapdance {
            compatible = "zmk,behavior-tap-dance";
            label = "KH_HS_TAPDANCE";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LEFT_BRACKET>, <&kp RIGHT_BRACKET>;
        };

        hrm: hrm {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <125>;
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB    &kp Q         &kp W         &kp E         &kp R         &kp T        &kp Y      &kp U         &kp I         &kp O         &kp P               &kp BSPC
&kp LCTRL  &hrm LG(A) A  &hrm LA(S) S  &hrm LS(D) D  &hrm LC(F) F  &kp G        &kp H      &hrm RC(J) J  &hrm LS(K) K  &hrm RA(L) L  &hrm RG(SEMI) SEMI  &kp SQT
&kp LSHFT  &kp Z         &kp X         &kp C         &kp V         &kp B        &kp N      &kp M         &kp COMMA     &kp DOT       &kp FSLH            &kp ESC
                                       &mo 3         &mo 1         &kp SPACE    &kp SPACE  &mo 2         &kp RET
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB     &kp N1        &kp N2        &kp N3        &kp N4        &kp N5          &kp N6     &kp N7    &kp N8   &kp N9     &kp N0  &kp BSPC
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp LEFT   &kp DOWN  &kp UP   &kp RIGHT  &trans  &trans
&kp LSHFT   &trans        &trans        &trans        &trans        &trans          &trans     &trans    &trans   &trans     &trans  &trans
                                        &kp LGUI      &mo 1         &kp SPACE       &kp SPACE  &mo 2     &kp RET
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp EXCL  &kp AT          &kp HASH         &kp DLLR  &kp PRCNT         &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &kp BSPC
&kp TILDE  &kp PIPE  &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp PLUS  &kp UNDERSCORE    &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT  &kp BSLH  &kp GRAVE
&kp LSHFT  &trans    &trans          &trans           &trans    &trans            &kp UNDER  &kp PLUS   &kp LBRC   &kp RBRC  &kp PIPE  &kp TILDE
                                     &kp LGUI         &mo 1     &kp SPACE         &kp SPACE  &mo 2      &kp RET
            >;
        };

        layer_3 {
            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6    &kp F7      &kp F8             &kp F9           &kp F10  &kp F11  &kp F12
&trans  &trans  &trans  &trans  &trans  &trans    &kp K_MUTE  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &trans   &trans   &kp PRINTSCREEN
&trans  &trans  &trans  &trans  &trans  &trans    &trans      &trans             &trans           &trans   &trans   &trans
                        &trans  &trans  &trans    &trans      &trans             &trans
            >;
        };
    };
};
